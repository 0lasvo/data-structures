[
  {
    "title": "Bubble Sort",
    "sources": "https://www.geeksforgeeks.org/bubble-sort/",
    "inPutData": {
      "images":[]
    },
    "outPutData": {
      "images":[]
    },
    "data":[
      {
        "subtitle":"¿Qué es bubble sort?",
        "body": "Bubble Sort es un algoritmo de ordenamiento sencillo que funciona iterando sobre la lista de elementos, comparando cada par adyacente y permutándolos si están en el orden incorrecto. Este proceso se repite hasta que la lista esté completamente ordenada. Aunque fácil de entender e implementar, es ineficiente para listas grandes debido a su complejidad temporal O(n^2).",
        "images": [],
        "videos": [
          "./assets/videos/A.mp4"
        ]
      },
      {
        "subtitle": "",
        "code":
        [
          {
            "title": "Bubble Sort",
            "code": "#include <stdio.h>\n\nvoid bubbleSort(int arr[], int n) {\n    int i, j;\n    for (i = 0; i < n-1; i++) {\n        for (j = 0; j < n-i-1; j++) {\n            if (arr[j] > arr[j+1]) {\n                int temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n}\n\nint main() {\n    int arr[] = {64, 34, 25, 12, 22, 11, 90};\n    int n = sizeof(arr)/sizeof(arr[0]);\n    bubbleSort(arr, n);\n    printf(\"Sorted array: \\n\");\n    for (int i=0; i < n; i++)\n        printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n    return 0;\n}"
          }
        ]
      }
    ]
  }
]
